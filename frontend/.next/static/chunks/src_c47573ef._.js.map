{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ragha/Projects/PitchPerfect/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\r\n\r\nimport {cn} from '@/lib/utils';\r\n\r\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\r\n  ({className, ...props}, ref) => {\r\n    return (\r\n      <textarea\r\n        className={cn(\r\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n);\r\nTextarea.displayName = 'Textarea';\r\n\r\nexport {Textarea};\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ragha/Projects/PitchPerfect/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-2xl font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ragha/Projects/PitchPerfect/src/ai/flows/pitchpad-enhance-prompt.ts"],"sourcesContent":["\r\n// src/ai/flows/pitchpad-enhance-prompt.ts\r\n'use server';\r\n/**\r\n * @fileOverview Enhances a user's startup idea prompt using AI.\r\n *\r\n * - enhancePrompt - A function that takes an original prompt and returns an AI-enhanced version.\r\n * - EnhancePromptInput - The input type for the enhancePrompt function.\r\n * - EnhancePromptOutput - The return type for the enhancePrompt function.\r\n */\r\n\r\nimport {ai} from '@/ai/genkit';\r\nimport {z} from 'genkit';\r\n\r\nconst EnhancePromptInputSchema = z.object({\r\n  originalPrompt: z.string().describe('The original startup idea or feature description provided by the user.'),\r\n});\r\nexport type EnhancePromptInput = z.infer<typeof EnhancePromptInputSchema>;\r\n\r\nconst EnhancePromptOutputSchema = z.object({\r\n  enhancedPrompt: z.string().describe('An AI-refined, more detailed, or more compelling version of the original prompt.'),\r\n});\r\nexport type EnhancePromptOutput = z.infer<typeof EnhancePromptOutputSchema>;\r\n\r\nexport async function enhancePrompt(input: EnhancePromptInput): Promise<EnhancePromptOutput> {\r\n  return enhancePromptFlow(input);\r\n}\r\n\r\nconst prompt = ai.definePrompt({\r\n  name: 'enhanceStartupIdeaPrompt',\r\n  input: {schema: EnhancePromptInputSchema},\r\n  output: {schema: EnhancePromptOutputSchema},\r\n  prompt: `You are an expert startup advisor and creative copywriter.\r\n  A founder has provided the following idea or feature description:\r\n  \"{{{originalPrompt}}}\"\r\n\r\n  Your task is to enhance this prompt. Make it more descriptive, compelling, and actionable.\r\n  Consider adding details about:\r\n  - Target audience\r\n  - Key problem solved\r\n  - Unique value proposition\r\n  - Potential innovative angle\r\n\r\n  Return only the enhanced prompt text.\r\n  For example, if the input is \"A social media app for pets\",\r\n  an enhanced prompt could be \"A vibrant social media platform exclusively for pet owners to share their furry friends' milestones, connect with local pet services, and discover pet-friendly locations, fostering a supportive community around animal companionship.\"\r\n  `,\r\n});\r\n\r\nconst enhancePromptFlow = ai.defineFlow(\r\n  {\r\n    name: 'enhancePromptFlow',\r\n    inputSchema: EnhancePromptInputSchema,\r\n    outputSchema: EnhancePromptOutputSchema,\r\n  },\r\n  async (input: EnhancePromptInput) => {\r\n    const {output} = await prompt(input);\r\n    if (!output) {\r\n      throw new Error('Failed to get a response from the AI model for enhancing prompt.');\r\n    }\r\n    return output;\r\n  }\r\n);\r\n"],"names":[],"mappings":";;;;;;IAwBsB,gBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ragha/Projects/PitchPerfect/src/ai/flows/pitchpad-generate-image.ts"],"sourcesContent":["\r\n// src/ai/flows/pitchpad-generate-image.ts\r\n'use server';\r\n/**\r\n * @fileOverview Generates an image from a text prompt using an AI model.\r\n *\r\n * - generateImageFromPrompt - A function that takes a text prompt and returns an image URL (data URI).\r\n * - GenerateImageInput - The input type for the generateImageFromPrompt function.\r\n * - GenerateImageOutput - The return type for the generateImageFromPrompt function.\r\n */\r\n\r\nimport {ai} from '@/ai/genkit';\r\nimport {z} from 'genkit';\r\n\r\nconst GenerateImageInputSchema = z.object({\r\n  prompt: z.string().describe('The text prompt to generate an image from. This should be descriptive and evocative.'),\r\n});\r\nexport type GenerateImageInput = z.infer<typeof GenerateImageInputSchema>;\r\n\r\nconst GenerateImageOutputSchema = z.object({\r\n  imageUrl: z.string().describe(\"The data URI of the generated image. Format: 'data:image/png;base64,<encoded_data>'.\"),\r\n  revisedPrompt: z.string().optional().describe(\"The prompt that was used to generate the image, if revised by the model.\")\r\n});\r\nexport type GenerateImageOutput = z.infer<typeof GenerateImageOutputSchema>;\r\n\r\nexport async function generateImageFromPrompt(input: GenerateImageInput): Promise<GenerateImageOutput> {\r\n  return generateImageFlow(input);\r\n}\r\n\r\n// Note: Genkit's `ai.generate` with Gemini for image generation currently returns media directly.\r\n// We don't define a separate prompt object here but call `ai.generate` in the flow.\r\nconst generateImageFlow = ai.defineFlow(\r\n  {\r\n    name: 'generateImageFromPromptFlow',\r\n    inputSchema: GenerateImageInputSchema,\r\n    outputSchema: GenerateImageOutputSchema,\r\n  },\r\n  async (input: GenerateImageInput) => {\r\n    const {media, revisedPrompt} = await ai.generate({\r\n      model: 'googleai/gemini-2.0-flash-exp', // Ensure this model is available and supports image generation\r\n      prompt: input.prompt,\r\n      config: {\r\n        responseModalities: ['TEXT', 'IMAGE'], // Must provide both\r\n        // Optional: Add safety settings if needed\r\n        // safetySettings: [\r\n        //   { category: 'HARM_CATEGORY_SEXUALLY_EXPLICIT', threshold: 'BLOCK_LOW_AND_ABOVE' }\r\n        // ],\r\n      },\r\n    });\r\n\r\n    if (!media || !media.url) {\r\n      throw new Error('Failed to generate image or image URL is missing.');\r\n    }\r\n\r\n    return {\r\n        imageUrl: media.url, // This should be a data URI\r\n        revisedPrompt: revisedPrompt\r\n    };\r\n  }\r\n);\r\n"],"names":[],"mappings":";;;;;;IAyBsB,0BAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ragha/Projects/PitchPerfect/src/app/founder-dashboard/page.tsx"],"sourcesContent":["\r\n\"use client\";\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\r\nimport Image from 'next/image';\r\nimport { Loader2, UploadCloud, BrainCircuit, Sparkles, FileImage, Wand2, BarChart3, DollarSign, Users, TrendingUp as TrendingUpIcon } from 'lucide-react';\r\nimport { useAuth } from '@/contexts/AuthContext';\r\nimport { useRouter } from 'next/navigation';\r\nimport { toast } from '@/hooks/use-toast';\r\nimport { enhancePrompt } from '../../ai/flows/pitchpad-enhance-prompt.ts';\r\nimport { generateImageFromPrompt } from '../../ai/flows/pitchpad-generate-image.ts';\r\n\r\nconst mockIdeas = [\r\n  { id: '1', title: 'AI-Powered Recipe Generator for Dietary Restrictions', description: 'An app that creates custom recipes based on user-inputted dietary needs, allergies, and available ingredients.' },\r\n  { id: '2', title: 'Sustainable Fashion Swap Platform', description: 'A community-based platform for users to swap high-quality clothing items, promoting circular fashion.' },\r\n  { id: '3', title: 'Gamified Language Learning App for Niche Languages', description: 'Learn less common languages through interactive games and cultural storytelling.' },\r\n  { id: '4', title: 'Hyperlocal Delivery Service for Small Farms', description: 'Connecting local farms directly with consumers for fresh produce delivery within a small radius.' },\r\n];\r\n\r\nexport default function FounderDashboardPage() {\r\n  const { user, isLoggedIn } = useAuth();\r\n  const router = useRouter();\r\n\r\n  const [ideaPrompt, setIdeaPrompt] = useState('');\r\n  const [enhancedPromptText, setEnhancedPromptText] = useState(''); // Renamed to avoid conflict\r\n  const [generatedImageUrl, setGeneratedImageUrl] = useState<string | null>(null);\r\n  const [isLoadingEnhance, setIsLoadingEnhance] = useState(false);\r\n  const [isLoadingGenerate, setIsLoadingGenerate] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!isLoggedIn) {\r\n      router.push('/signin');\r\n    } else if (user?.role !== 'founder') {\r\n      router.push('/investor-dashboard'); \r\n    }\r\n  }, [isLoggedIn, user, router]);\r\n\r\n  const handleEnhancePrompt = async () => {\r\n    if (!ideaPrompt.trim()) {\r\n      toast({ title: \"Empty Prompt\", description: \"Please enter your idea first.\", variant: \"destructive\" });\r\n      return;\r\n    }\r\n    setIsLoadingEnhance(true);\r\n    setEnhancedPromptText('');\r\n    try {\r\n      const result = await enhancePrompt({ originalPrompt: ideaPrompt });\r\n      setEnhancedPromptText(result.enhancedPrompt);\r\n      toast({ title: \"Prompt Enhanced!\", description: \"Your idea has been refined by AI.\" });\r\n    } catch (error) {\r\n      console.error(\"Error enhancing prompt:\", error);\r\n      toast({ title: \"Enhancement Failed\", description: \"Could not enhance prompt. Please try again.\", variant: \"destructive\" });\r\n    } finally {\r\n      setIsLoadingEnhance(false);\r\n    }\r\n  };\r\n\r\n  const handleGenerateImage = async () => {\r\n    const promptToUse = enhancedPromptText || ideaPrompt;\r\n    if (!promptToUse.trim()) {\r\n      toast({ title: \"Empty Prompt\", description: \"Please enter or enhance your idea first.\", variant: \"destructive\" });\r\n      return;\r\n    }\r\n    setIsLoadingGenerate(true);\r\n    setGeneratedImageUrl(null);\r\n    try {\r\n      const result = await generateImageFromPrompt({ prompt: promptToUse });\r\n      setGeneratedImageUrl(result.imageUrl); \r\n      if (result.revisedPrompt) {\r\n        setEnhancedPromptText(result.revisedPrompt); // Update enhancedPromptText here\r\n         toast({ title: \"Image Generated!\", description: \"AI also revised the prompt slightly for this image.\" });\r\n      } else {\r\n        toast({ title: \"Image Generated!\", description: \"Your vision, visualized by AI.\" });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error generating image:\", error);\r\n      toast({ title: \"Image Generation Failed\", description: \"Could not generate image. Please try again.\", variant: \"destructive\" });\r\n    } finally {\r\n      setIsLoadingGenerate(false);\r\n    }\r\n  };\r\n\r\n  if (!isLoggedIn || user?.role !== 'founder') {\r\n    return <div className=\"flex justify-center items-center h-screen\"><Loader2 className=\"h-8 w-8 animate-spin text-primary\" /></div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-12\">\r\n      <section className=\"animate-fade-in-up\">\r\n        <Card className=\"shadow-xl border-primary/20\">\r\n          <CardHeader className=\"text-center\">\r\n            <BrainCircuit className=\"h-16 w-16 text-primary mx-auto mb-4\" />\r\n            <CardTitle className=\"text-3xl md:text-4xl font-bold font-headline\">Spark Your Vision</CardTitle>\r\n            <CardDescription className=\"text-lg text-muted-foreground max-w-xl mx-auto\">\r\n              Unleash your next big idea. Describe it, let AI enhance it, and visualize it instantly.\r\n            </CardDescription>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-6\">\r\n            <Textarea\r\n              placeholder=\"Describe your startup idea, a feature, or a concept... Let your imagination flow!\"\r\n              value={ideaPrompt}\r\n              onChange={(e) => {\r\n                setIdeaPrompt(e.target.value);\r\n                if (enhancedPromptText) setEnhancedPromptText(''); \r\n                if (generatedImageUrl) setGeneratedImageUrl(null); \r\n              }}\r\n              rows={5}\r\n              className=\"text-base p-4 focus:ring-2 focus:ring-primary/50\"\r\n            />\r\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\r\n              <Button onClick={handleEnhancePrompt} disabled={isLoadingEnhance || !ideaPrompt.trim()} className=\"flex-1 group\">\r\n                {isLoadingEnhance ? (\r\n                  <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\r\n                ) : (\r\n                  <Wand2 className=\"mr-2 h-5 w-5 group-hover:animate-pulse\" />\r\n                )}\r\n                Enhance Prompt with AI\r\n              </Button>\r\n              <Button onClick={handleGenerateImage} disabled={isLoadingGenerate || !ideaPrompt.trim()} className=\"flex-1 group\">\r\n                {isLoadingGenerate ? (\r\n                  <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\r\n                ) : (\r\n                  <FileImage className=\"mr-2 h-5 w-5 group-hover:animate-pulse\" />\r\n                )}\r\n                Generate Image with AI\r\n              </Button>\r\n            </div>\r\n             <Button variant=\"outline\" className=\"w-full group\">\r\n                <UploadCloud className=\"mr-2 h-5 w-5 group-hover:animate-pulse\" /> Upload Photo (Placeholder)\r\n            </Button>\r\n\r\n            {enhancedPromptText && (\r\n              <Card className=\"bg-secondary/50\">\r\n                <CardHeader>\r\n                  <CardTitle className=\"text-lg flex items-center\"><Wand2 className=\"mr-2 h-5 w-5 text-primary\"/> AI-Enhanced Prompt</CardTitle>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <p className=\"text-muted-foreground italic whitespace-pre-wrap\">{enhancedPromptText}</p>\r\n                </CardContent>\r\n              </Card>\r\n            )}\r\n\r\n            {isLoadingGenerate && (\r\n              <div className=\"text-center py-4\">\r\n                <Loader2 className=\"h-8 w-8 animate-spin text-primary mx-auto\" />\r\n                <p className=\"text-muted-foreground mt-2\">Generating your vision...</p>\r\n              </div>\r\n            )}\r\n\r\n            {generatedImageUrl && (\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle className=\"text-lg flex items-center\"><FileImage className=\"mr-2 h-5 w-5 text-primary\"/> Generated Image</CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"flex justify-center\">\r\n                  <Image\r\n                    src={generatedImageUrl} \r\n                    alt=\"AI Generated Image for startup idea\"\r\n                    width={512}\r\n                    height={512}\r\n                    className=\"rounded-md border shadow-md object-contain\"\r\n                    data-ai-hint=\"startup concept art\"\r\n                  />\r\n                </CardContent>\r\n              </Card>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      </section>\r\n\r\n      <section className=\"animate-fade-in-up\" style={{animationDelay: \"200ms\"}}>\r\n        <div className=\"flex items-center mb-6\">\r\n          <BarChart3 className=\"h-8 w-8 text-primary mr-3\" />\r\n          <h2 className=\"text-2xl md:text-3xl font-bold font-headline\">Key Milestones & Insights</h2>\r\n        </div>\r\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          <Card className=\"hover:shadow-lg transition-shadow\">\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium\">Avg. Seed Round (Q3)</CardTitle>\r\n              <DollarSign className=\"h-5 w-5 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-2xl font-bold\">$750K</div>\r\n              <p className=\"text-xs text-muted-foreground\">+15% from last quarter</p>\r\n            </CardContent>\r\n          </Card>\r\n          <Card className=\"hover:shadow-lg transition-shadow\">\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium\">Successful Pitches</CardTitle>\r\n              <TrendingUpIcon className=\"h-5 w-5 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-2xl font-bold\">120+</div>\r\n              <p className=\"text-xs text-muted-foreground\">+22% this month</p>\r\n            </CardContent>\r\n          </Card>\r\n          <Card className=\"hover:shadow-lg transition-shadow\">\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium\">Active Founders</CardTitle>\r\n              <Users className=\"h-5 w-5 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-2xl font-bold\">500+</div>\r\n              <p className=\"text-xs text-muted-foreground\">Growing community</p>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </section>\r\n\r\n      <section className=\"animate-fade-in-up\" style={{animationDelay: \"400ms\"}}>\r\n        <div className=\"flex items-center mb-6\">\r\n          <Sparkles className=\"h-8 w-8 text-primary mr-3\" />\r\n          <h2 className=\"text-2xl md:text-3xl font-bold font-headline\">Recent Sparks & Community Ideas</h2>\r\n        </div>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n          {mockIdeas.map((idea, index) => (\r\n            <Card key={idea.id} className=\"hover:shadow-lg transition-shadow transform hover:scale-105\">\r\n              <CardHeader>\r\n                <CardTitle className=\"font-headline text-xl\">{idea.title}</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <p className=\"text-muted-foreground text-sm\">{idea.description}</p>\r\n              </CardContent>\r\n            </Card>\r\n          ))}\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}