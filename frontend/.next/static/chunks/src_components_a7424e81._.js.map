{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ragha/Projects/PitchPerfect/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-2xl font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ragha/Projects/PitchPerfect/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst labelVariants = cva(\r\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\r\n)\r\n\r\nconst Label = React.forwardRef<\r\n  React.ElementRef<typeof LabelPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\r\n    VariantProps<typeof labelVariants>\r\n>(({ className, ...props }, ref) => (\r\n  <LabelPrimitive.Root\r\n    ref={ref}\r\n    className={cn(labelVariants(), className)}\r\n    {...props}\r\n  />\r\n))\r\nLabel.displayName = LabelPrimitive.Root.displayName\r\n\r\nexport { Label }\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ragha/Projects/PitchPerfect/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport {\r\n  Controller,\r\n  FormProvider,\r\n  useFormContext,\r\n  type ControllerProps,\r\n  type FieldPath,\r\n  type FieldValues,\r\n} from \"react-hook-form\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Label } from \"@/components/ui/label\"\r\n\r\nconst Form = FormProvider\r\n\r\ntype FormFieldContextValue<\r\n  TFieldValues extends FieldValues = FieldValues,\r\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\r\n> = {\r\n  name: TName\r\n}\r\n\r\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\r\n  {} as FormFieldContextValue\r\n)\r\n\r\nconst FormField = <\r\n  TFieldValues extends FieldValues = FieldValues,\r\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\r\n>({\r\n  ...props\r\n}: ControllerProps<TFieldValues, TName>) => {\r\n  return (\r\n    <FormFieldContext.Provider value={{ name: props.name }}>\r\n      <Controller {...props} />\r\n    </FormFieldContext.Provider>\r\n  )\r\n}\r\n\r\nconst useFormField = () => {\r\n  const fieldContext = React.useContext(FormFieldContext)\r\n  const itemContext = React.useContext(FormItemContext)\r\n  const { getFieldState, formState } = useFormContext()\r\n\r\n  const fieldState = getFieldState(fieldContext.name, formState)\r\n\r\n  if (!fieldContext) {\r\n    throw new Error(\"useFormField should be used within <FormField>\")\r\n  }\r\n\r\n  const { id } = itemContext\r\n\r\n  return {\r\n    id,\r\n    name: fieldContext.name,\r\n    formItemId: `${id}-form-item`,\r\n    formDescriptionId: `${id}-form-item-description`,\r\n    formMessageId: `${id}-form-item-message`,\r\n    ...fieldState,\r\n  }\r\n}\r\n\r\ntype FormItemContextValue = {\r\n  id: string\r\n}\r\n\r\nconst FormItemContext = React.createContext<FormItemContextValue>(\r\n  {} as FormItemContextValue\r\n)\r\n\r\nconst FormItem = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => {\r\n  const id = React.useId()\r\n\r\n  return (\r\n    <FormItemContext.Provider value={{ id }}>\r\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\r\n    </FormItemContext.Provider>\r\n  )\r\n})\r\nFormItem.displayName = \"FormItem\"\r\n\r\nconst FormLabel = React.forwardRef<\r\n  React.ElementRef<typeof LabelPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\r\n>(({ className, ...props }, ref) => {\r\n  const { error, formItemId } = useFormField()\r\n\r\n  return (\r\n    <Label\r\n      ref={ref}\r\n      className={cn(error && \"text-destructive\", className)}\r\n      htmlFor={formItemId}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nFormLabel.displayName = \"FormLabel\"\r\n\r\nconst FormControl = React.forwardRef<\r\n  React.ElementRef<typeof Slot>,\r\n  React.ComponentPropsWithoutRef<typeof Slot>\r\n>(({ ...props }, ref) => {\r\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\r\n\r\n  return (\r\n    <Slot\r\n      ref={ref}\r\n      id={formItemId}\r\n      aria-describedby={\r\n        !error\r\n          ? `${formDescriptionId}`\r\n          : `${formDescriptionId} ${formMessageId}`\r\n      }\r\n      aria-invalid={!!error}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nFormControl.displayName = \"FormControl\"\r\n\r\nconst FormDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => {\r\n  const { formDescriptionId } = useFormField()\r\n\r\n  return (\r\n    <p\r\n      ref={ref}\r\n      id={formDescriptionId}\r\n      className={cn(\"text-sm text-muted-foreground\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nFormDescription.displayName = \"FormDescription\"\r\n\r\nconst FormMessage = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, children, ...props }, ref) => {\r\n  const { error, formMessageId } = useFormField()\r\n  const body = error ? String(error?.message ?? \"\") : children\r\n\r\n  if (!body) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <p\r\n      ref={ref}\r\n      id={formMessageId}\r\n      className={cn(\"text-sm font-medium text-destructive\", className)}\r\n      {...props}\r\n    >\r\n      {body}\r\n    </p>\r\n  )\r\n})\r\nFormMessage.displayName = \"FormMessage\"\r\n\r\nexport {\r\n  useFormField,\r\n  Form,\r\n  FormItem,\r\n  FormLabel,\r\n  FormControl,\r\n  FormDescription,\r\n  FormMessage,\r\n  FormField,\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 367, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ragha/Projects/PitchPerfect/src/components/ui/radio-group.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\r\nimport { Circle } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst RadioGroup = React.forwardRef<\r\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\r\n>(({ className, ...props }, ref) => {\r\n  return (\r\n    <RadioGroupPrimitive.Root\r\n      className={cn(\"grid gap-2\", className)}\r\n      {...props}\r\n      ref={ref}\r\n    />\r\n  )\r\n})\r\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\r\n\r\nconst RadioGroupItem = React.forwardRef<\r\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\r\n>(({ className, ...props }, ref) => {\r\n  return (\r\n    <RadioGroupPrimitive.Item\r\n      ref={ref}\r\n      className={cn(\r\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\r\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\r\n      </RadioGroupPrimitive.Indicator>\r\n    </RadioGroupPrimitive.Item>\r\n  )\r\n})\r\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\r\n\r\nexport { RadioGroup, RadioGroupItem }\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,6LAAC,6KAAA,CAAA,OAAwB;QACvB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;QAC3B,GAAG,KAAK;QACT,KAAK;;;;;;AAGX;;AACA,WAAW,WAAW,GAAG,6KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,+BAAiB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,6LAAC,6KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4OACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,6KAAA,CAAA,YAA6B;YAAC,WAAU;sBACvC,cAAA,6LAAC,yMAAA,CAAA,SAAM;gBAAC,WAAU;;;;;;;;;;;;;;;;AAI1B;;AACA,eAAe,WAAW,GAAG,6KAAA,CAAA,OAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 437, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ragha/Projects/PitchPerfect/src/components/auth/AuthForm.tsx"],"sourcesContent":["\r\n\"use client\";\r\n\r\nimport React, { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { zodResolver } from '@hookform/resolvers/zod';\r\nimport * as z from 'zod';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';\r\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\r\nimport { useAuth } from '@/contexts/AuthContext';\r\nimport { useRouter, useSearchParams } from 'next/navigation';\r\nimport { toast } from '@/hooks/use-toast';\r\nimport { Loader2, Mail, Lock, User } from 'lucide-react';\r\nimport Image from 'next/image';\r\n\r\ninterface AuthFormProps {\r\n  mode: 'signin' | 'signup';\r\n}\r\n\r\nconst signInSchema = z.object({\r\n  email: z.string().email({ message: 'Invalid email address' }),\r\n  password: z.string().min(6, { message: 'Password must be at least 6 characters' }),\r\n});\r\n\r\nconst signUpSchema = z.object({\r\n  name: z.string().min(2, { message: 'Name must be at least 2 characters' }).optional(),\r\n  email: z.string().email({ message: 'Invalid email address' }),\r\n  password: z.string().min(6, { message: 'Password must be at least 6 characters' }),\r\n  role: z.enum(['founder', 'investor'], { required_error: 'You must select a role' }),\r\n});\r\n\r\ntype SignInFormValues = z.infer<typeof signInSchema>;\r\ntype SignUpFormValues = z.infer<typeof signUpSchema>;\r\n\r\nexport function AuthForm({ mode }: AuthFormProps) {\r\n  const { login, user, setUserRole: setContextUserRole } = useAuth();\r\n  const router = useRouter();\r\n  const searchParams = useSearchParams();\r\n  const initialRole = searchParams.get('role') as 'founder' | 'investor' | null;\r\n  \r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isLoadingGoogle, setIsLoadingGoogle] = useState(false);\r\n  const [selectedRole, setSelectedRole] = useState<'founder' | 'investor' | undefined>(initialRole || user?.role || undefined);\r\n\r\n  const formSchema = mode === 'signup' ? signUpSchema : signInSchema;\r\n  type FormValues = typeof mode extends 'signup' ? SignUpFormValues : SignInFormValues;\r\n\r\n  const form = useForm<FormValues>({\r\n    resolver: zodResolver(formSchema),\r\n    defaultValues: mode === 'signup'\r\n      ? { email: '', password: '', role: initialRole || undefined, name: '' }\r\n      : { email: '', password: '' },\r\n  });\r\n\r\n  const onSubmit = async (values: FormValues) => {\r\n    setIsLoading(true);\r\n    await new Promise(resolve => setTimeout(resolve, 1500));\r\n\r\n    if (mode === 'signup') {\r\n      const signupValues = values as SignUpFormValues;\r\n      login({ id: Date.now().toString(), email: signupValues.email, role: signupValues.role, name: signupValues.name });\r\n      toast({ title: \"Account Created!\", description: \"Welcome to PitchPerfect.\" });\r\n      router.push(signupValues.role === 'founder' ? '/founder-dashboard' : '/investor-dashboard');\r\n    } else {\r\n      const signinValues = values as SignInFormValues;\r\n      const userRoleToLogin = user?.role || 'founder'; // Use existing role if available, else default\r\n      login({ id: Date.now().toString(), email: signinValues.email, role: userRoleToLogin });\r\n      toast({ title: \"Signed In!\", description: \"Welcome back to PitchPerfect.\" });\r\n      router.push(userRoleToLogin === 'founder' ? '/founder-dashboard' : '/investor-dashboard');\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const handleGoogleSignIn = async () => {\r\n    setIsLoadingGoogle(true);\r\n    await new Promise(resolve => setTimeout(resolve, 1500));\r\n    const roleToLogin = selectedRole || (mode === 'signup' ? 'founder' : (user?.role || 'founder')); \r\n    login({ id: 'google-user', email: 'user@google.com', role: roleToLogin, name: 'Google User' });\r\n    toast({ title: \"Signed In with Google!\", description: \"Welcome to PitchPerfect.\" });\r\n    router.push(roleToLogin === 'founder' ? '/founder-dashboard' : '/investor-dashboard');\r\n    setIsLoadingGoogle(false);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (mode === 'signup' && initialRole) {\r\n      form.setValue('role' as any, initialRole); \r\n      setSelectedRole(initialRole);\r\n      setContextUserRole(initialRole);\r\n    }\r\n  }, [mode, initialRole, form, setContextUserRole]);\r\n\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center min-h-[calc(100vh-15rem)] py-12\">\r\n      <Card className=\"w-full max-w-md shadow-xl animate-fade-in-up\">\r\n        <CardHeader className=\"text-center\">\r\n          <CardTitle className=\"text-3xl font-headline\">\r\n            {mode === 'signin' ? 'Welcome Back!' : 'Create Your Account'}\r\n          </CardTitle>\r\n          <CardDescription>\r\n            {mode === 'signin' ? 'Sign in to access your dashboard.' : 'Join PitchPerfect as a founder or investor.'}\r\n          </CardDescription>\r\n        </CardHeader>\r\n        <CardContent>\r\n          {/* Social Logins First */}\r\n          <div className=\"space-y-4 mb-6\">\r\n            <Button variant=\"outline\" className=\"w-full\" onClick={handleGoogleSignIn} disabled={isLoading || isLoadingGoogle}>\r\n              {isLoadingGoogle ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : \r\n                <Image src=\"https://placehold.co/20x20.png?text=G\" alt=\"Google\" width={20} height={20} className=\"mr-2\" data-ai-hint=\"google logo\" />\r\n              }\r\n              {mode === 'signup' ? 'Sign Up with Google' : 'Sign In with Google'}\r\n            </Button>\r\n          </div>\r\n\r\n          <div className=\"relative mb-6\">\r\n            <div className=\"absolute inset-0 flex items-center\">\r\n              <span className=\"w-full border-t\" />\r\n            </div>\r\n            <div className=\"relative flex justify-center text-xs uppercase\">\r\n              <span className=\"bg-card px-2 text-muted-foreground\">\r\n                Or {mode === 'signup' ? 'sign up' : 'sign in'} with email\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <Form {...form}>\r\n            <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\r\n              {mode === 'signup' && (\r\n                <>\r\n                 <FormField\r\n                    control={form.control}\r\n                    name=\"name\"\r\n                    render={({ field }) => (\r\n                      <FormItem>\r\n                        <FormLabel>Full Name</FormLabel>\r\n                        <FormControl>\r\n                          <div className=\"relative\">\r\n                            <User className=\"absolute left-3 top-1/2 -translate-y-1/2 h-5 w-5 text-muted-foreground\" />\r\n                            <Input placeholder=\"Your Name\" {...field} className=\"pl-10\" />\r\n                          </div>\r\n                        </FormControl>\r\n                        <FormMessage />\r\n                      </FormItem>\r\n                    )}\r\n                  />\r\n                  <FormField\r\n                    control={form.control}\r\n                    name=\"role\"\r\n                    render={({ field }) => (\r\n                      <FormItem className=\"space-y-3\">\r\n                        <FormLabel>I am a...</FormLabel>\r\n                        <FormControl>\r\n                          <RadioGroup\r\n                            onValueChange={(value: 'founder' | 'investor') => {\r\n                              field.onChange(value);\r\n                              setSelectedRole(value);\r\n                              setContextUserRole(value);\r\n                            }}\r\n                            defaultValue={field.value}\r\n                            className=\"flex flex-col space-y-1 sm:flex-row sm:space-y-0 sm:space-x-4\"\r\n                          >\r\n                            <FormItem className=\"flex items-center space-x-3 space-y-0\">\r\n                              <FormControl>\r\n                                <RadioGroupItem value=\"founder\" />\r\n                              </FormControl>\r\n                              <FormLabel className=\"font-normal\">Founder</FormLabel>\r\n                            </FormItem>\r\n                            <FormItem className=\"flex items-center space-x-3 space-y-0\">\r\n                              <FormControl>\r\n                                <RadioGroupItem value=\"investor\" />\r\n                              </FormControl>\r\n                              <FormLabel className=\"font-normal\">Investor</FormLabel>\r\n                            </FormItem>\r\n                          </RadioGroup>\r\n                        </FormControl>\r\n                        <FormMessage />\r\n                      </FormItem>\r\n                    )}\r\n                  />\r\n                </>\r\n              )}\r\n              <FormField\r\n                control={form.control}\r\n                name=\"email\"\r\n                render={({ field }) => (\r\n                  <FormItem>\r\n                    <FormLabel>Email Address</FormLabel>\r\n                    <FormControl>\r\n                      <div className=\"relative\">\r\n                        <Mail className=\"absolute left-3 top-1/2 -translate-y-1/2 h-5 w-5 text-muted-foreground\" />\r\n                        <Input type=\"email\" placeholder=\"you@example.com\" {...field} className=\"pl-10\" />\r\n                      </div>\r\n                    </FormControl>\r\n                    <FormMessage />\r\n                  </FormItem>\r\n                )}\r\n              />\r\n              <FormField\r\n                control={form.control}\r\n                name=\"password\"\r\n                render={({ field }) => (\r\n                  <FormItem>\r\n                    <FormLabel>Password</FormLabel>\r\n                    <FormControl>\r\n                      <div className=\"relative\">\r\n                        <Lock className=\"absolute left-3 top-1/2 -translate-y-1/2 h-5 w-5 text-muted-foreground\" />\r\n                        <Input type=\"password\" placeholder=\"••••••••\" {...field} className=\"pl-10\" />\r\n                      </div>\r\n                    </FormControl>\r\n                    <FormMessage />\r\n                  </FormItem>\r\n                )}\r\n              />\r\n              <Button type=\"submit\" className=\"w-full\" disabled={isLoading || isLoadingGoogle}>\r\n                {(isLoading && !isLoadingGoogle) && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\r\n                {mode === 'signin' ? 'Sign In' : 'Create Account'}\r\n              </Button>\r\n            </form>\r\n          </Form>\r\n        </CardContent>\r\n        <CardFooter className=\"justify-center\">\r\n          <p className=\"text-sm text-muted-foreground\">\r\n            {mode === 'signin' ? \"Don't have an account?\" : 'Already have an account?'}\r\n            <Button variant=\"link\" asChild>\r\n              <a href={mode === 'signin' ? '/signup' : '/signin'} className=\"font-semibold text-primary\">\r\n                {mode === 'signin' ? 'Sign Up' : 'Sign In'}\r\n              </a>\r\n            </Button>\r\n          </p>\r\n        </CardFooter>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}